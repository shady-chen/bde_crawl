<?php
/**
 * Created by PhpStorm.
 * User: Administrator
 * Date: 2018/12/12
 * Time: 21:23
 */

namespace app\admin\controller;



use think\Request;

class Admin extends Base
{
    function _initialize()
    {
        if(!$this->isAdmin()){
            return $this->error('您还没有登录！','/admin/user/login');
        }
        //parent::_initialize(); // TODO: Change the autogenerated stub
    }

    /**
     * 数据报表
     */
    public function index()
    {
        $website_count = db('website_list')->count();
        $file_count = db('file_name')->count();
        $this->assign('website_count',$website_count);
        $this->assign('file_count',$file_count);
        return $this->fetch();
    }


    /**
     * 订单列表的页面
     * @return mixed
     * @throws \think\db\exception\DataNotFoundException
     * @throws \think\db\exception\ModelNotFoundException
     * @throws \think\exception\DbException
     */
    public function order_list()
    {
        //域名
        $result_by_domain = "";
        if(isset($_GET['domain']) && !empty($_GET['domain']))
        {
            $result_by_domain = "a.data_from = '{$_GET['domain']}'";
        }
        //国家
        $result_by_country = "";
        if(isset($_GET['country']) && !empty($_GET['country']))
        {
            $result_by_domain = "b.country like '%{$_GET['country']}%'";
        }
        //人名
        $result_by_name = "";
        if(isset($_GET['username']) && !empty($_GET['username']))
        {
            $result_by_name = "b.all_name like '%{$_GET['username']}%'";
        }
        //产品
        $result_by_product = "";
        if(isset($_GET['product_name']) && !empty($_GET['product_name']))
        {
            $result_by_product = "a.product_keyword like '%{$_GET['product_name']}%'";
        }

        //时间
        $result_by_start_time = "2000-01-01";
        $result_by_end_time   = "2030-01-01";
        if(isset($_GET['start_time']) && !empty($_GET['start_time']))
        {
            $result_by_start_time = $_GET['start_time'];
        }
        if(isset($_GET['end_time']) && !empty($_GET['end_time']))
        {
            $result_by_end_time = $_GET['end_time'];
        }


        $data = db('order')
            ->alias("a")
            ->join('customer b','a.customer_id = b.id')
            ->order('a.create_time desc')
            ->where($result_by_domain)
            ->where($result_by_country)
            ->where($result_by_name)
            ->where($result_by_product)
            ->where('a.finished_time','between time',[$result_by_start_time,$result_by_end_time])
            ->paginate(2,false,['type'=>'BootstrapDetail',]);
        $page = $data;
        $data = $data->items();

        for($i=0;$i<count($data);$i++)
        {
            $data[$i]['product'] = null;
            $data[$i]['product'] = json_decode($data[$i]['shopping_cart'],true);
        }


        $this->assign('data',$data);
        $this->assign('page',$page->render());
        $website_list = db('website_list')->select();
        $this->assign('website_list',$website_list);
        return $this->fetch();
    }


    /**
     * 客户信息的页面
     * @return mixed
     */
    public function onePerson()
    {
        $id = $this->request->param('contentId');
        $appOrder = db('order_content');
        $data = $appOrder->where(['id'=>$id])->value('content');
        $data = json_decode($data,true);

        $data['shoppingcart'] = json_decode($data['shoppingcart'],true);

        $this->assign('data',$data);
        return $this->fetch();

    }



    public function down_load()
    {

        return $this->fetch();
    }
    public function down_load_data()
    {
        $data = [];
        $website_list = db('website_list')->where(['state'=>1])->select();
        for($i=0;$i<count($website_list);$i++)
        {
            $domain = $website_list[$i]['domain'];
            $data[] = [
                'domain' => $domain,
                'count'  => db('file_name')->where(['belong'=>$domain])->count()
            ];
        }
        return $data;
    }

    public function pingDomain()
    {
        $return_data = ["status"=>0,"count"=>0];
        $domain = $this->request->param('domain');
        $files = $this->getData('http://us.shopnm.top/showFiles.php?dir=/'.$domain);
        if($files)
        {
            $return_data = ["status"=>200,"count"=>count($files)];
        }
        else
        {
            $return_data = ["status"=>404,"count"=>0];
        }
        return $return_data;

    }


    public function getData($url)
    {

        $ch = curl_init();
        curl_setopt($ch,CURLOPT_URL,$url);
        curl_setopt($ch,CURLOPT_RETURNTRANSFER,1);
        curl_setopt($ch,CURLOPT_HEADER,0);
        $output = curl_exec($ch);
        curl_close($ch);
        if($output === FALSE ){
            return false;
        }
        else
        {
            return $output;
        }

    }









    //down_load的第一步 更新网站列表
    public function getWebSiteList()
    {

        $return_data = [];
        $website_list = file_get_contents("http://us.shopnm.top/showDir.php");
        $website_list = json_decode($website_list, true);
        $insertCount = 0;
        foreach ($website_list as $key=> $value)
        {
            if(!db('website_list')->where(['domain'=>substr($value,11)])->find())
            {
                db('website_list')->insert(['domain'=>substr($value,11),"create_time"=>time()]);
                $insertCount++;
            }
            else
            {

            }
            $return_data[$key] = [
                'domain'=>substr($value,11),
                'count'=>0,
                'downloaded'=>0,
                'new'=>0,
            ];
        }

        $file_count = 0;
        $file_insert_count = 0;
        foreach ($website_list as $key=> $value)
        {
            $file_list = file_get_contents("http://us.shopnm.top/showFiles.php?dir=/".substr($value,11));
            $file_list = json_decode($file_list, true);
            $return_data[$key]['count'] = count($file_list);
            foreach ($file_list as $k=>$v)
            {
                $number = 11+strlen(substr($value,11))+1;
                if(!db('file_name')->where(['file_name'=>substr($v,$number)])->find())
                {
                    db('file_name')->insert(['file_name'=>substr($v,$number),"belong"=>substr($value,11),"create_time"=>time()]);
                    $file_insert_count++;
                }
                $file_count++;
            }
        }
        //数据库中查看已下载种未下载的数量
        for($i=0;$i<count($return_data);$i++)
        {
            $return_data[$i]['count'] = db('file_name')->where(['belong'=>$return_data[$i]['domain'] ])->count();
            $return_data[$i]['downloaded'] = db('file_name')->where(['belong'=>$return_data[$i]['domain'],'collected'=>1])->count();
            $return_data[$i]['new'] = db('file_name')->where(['belong'=>$return_data[$i]['domain'],'collected'=>0])->count();
        }

        return json($return_data);
        //到此目录已完成
    }


    //down_load的第二步 下载网站的内容
    public function getFileContent()
    {
        $return_data = ['count'=>0,'download'=>0];
        $url = $this->request->param('url');

        if($url == "all")
        {
            $file_name_list = db('file_name')->where(['collected'=>0])->select();
        }
        else
        {
            $file_name_list = db('file_name')->where(['collected'=>0,'belong'=>$url])->select();
        }


        $data_count = count($file_name_list);

        $insert_count = 0;

        foreach ($file_name_list as $key=>$value)
        {
            $content =  file_get_contents("http://us.shopnm.top/ordersdb/".$value['belong']."/".$value['file_name']);
            if(!db('order_content')->where(['file_name'=>$value['file_name']])->find())
            {
                db('order_content')->insert(['file_name'=>$value['file_name'],"belong"=>$value['belong'],"content"=>$content,"create_time"=>time()]);
                db('file_name')->where(['file_name'=>$value['file_name']])->update(['collected'=>1]);
                $insert_count++;
            }
        }

        $return_data['count'] = $data_count;
        $return_data['download'] = $insert_count;
        $return_data['satus'] = 200;
        return json($return_data);

    }


    //down_load的第三步 分类入库刚刚下载的内容
    public function classifiedData()
    {

        $order_list = db('order_content')->where(['classified'=>0])->select();
        foreach ($order_list as $key=>$value)
        {
            //格式化数据
            $data = json_decode($value['content'],true);

            //组装用户的数据
            $customer = [];
            $customer['first_name'] = $data['txtfirstname']?$data['txtfirstname']:"unknown";
            $customer['last_name'] = $data['txtlastname']?$data['txtlastname']:"unknown";
            $customer['all_name'] = $customer['first_name'].$customer['last_name'];
            $customer['rbsex'] = $data['rbsex']?"女":"男";
            $customer['email'] = $data['txtemailaddress']?$data['txtemailaddress']:"unknown";
            $customer['phone'] = $data['txttelephone']?$data['txttelephone']:"unknown";
            $customer['country'] = $data['drpcountry']?$data['drpcountry']:"unknown";
            $customer['city'] = $data['txtcity']?$data['txtcity']:"unknown";
            $customer['address'] = $data['txtstreetaddress']?$data['txtstreetaddress']:"unknown";
            $customer['ip'] = $data['localip']?$data['localip']:"unknown";
            $customer['currency'] = $data['currency']?$data['currency']:"unknown";
            $customer['txtpostcode'] = $data['txtpostcode']?$data['txtpostcode']:"unknown";
            $customer['birthday'] = $data['txtbirthday']?$data['txtbirthday']:"unknown";
            $customer['bill_name'] = $data['billingfirstname']?$data['billingfirstname']:"unknown" . $data['billinglastname']?$data['billinglastname']:"unknown";
            $customer['bill_country'] = $data['billingcountry']?$data['billingcountry']:"unknown";
            $customer['bill_city'] = $data['billingcity']?$data['billingcity']:"unknown";
            $customer['bill_address'] = $data['billingstreetaddress']?$data['billingstreetaddress']:"unknown";
            $customer['pid'] = $value['id'];
            $customer['create_time'] = time();
            $customer['update_time'] = time();

            //入用户表 查看是否存在些用户
            $map = [
                'phone'=>$customer['phone'],
                'first_name'=>$customer['first_name'],
                'last_name'=>$customer['last_name'],
                'email'=>$customer['email'],
            ];
            $customer_id = null;
            if(!db('customer')->where($map)->find())
            {
                //用户插入完成
                $customer_id = db('customer')->insert($customer,false,true);
            }

            //如果没有新增加用户的话， 就去找以前的用户
            $uid = 0;
            if($customer_id)
            {
                $uid = $customer_id;
            }
            else
            {
                $user = db('customer')->where($map)->find();
                $uid = $user['id'];
            }

            if($uid == 0)
            {
                echo "the system cant find the customer Plz check one more";
                exit();
            }

            //开始插入订单的信息了
            $order = [];
            $order['order_id'] = $data['orderid']?$data['orderid']:"unknown";
            $order['customer_id'] = $uid;
            $order['pid'] = $value['id'];
            if(isset($data['orderstatus']))
            {
                $order['order_state'] = $data['orderstatus']?$data['orderstatus']:"unknown";
            }
            else
            {
                $order['order_state'] = "unknown";
            }
            if(isset($data['orders_date_finished']))
            {
                $order['finished_time'] = $data['orders_date_finished']?$data['orders_date_finished']:"unknown";
            }
            else
            {
                $order['finished_time'] = "unknown";
            }


            //组装keywords.............
            $shopping_cart = json_decode($data['shoppingcart'],true);
            $freight = 0;
            $total = $shopping_cart['total'];
            $total_price = 0;
            $product_keyword = "";
            unset($shopping_cart['total']);
            unset($shopping_cart['orderid']);
            $order['shopping_cart'] = json_encode($shopping_cart);
            foreach ($shopping_cart as $k=>$v)
            {
                $product_keyword .= $v['productname']." ";
                $total_price += $v['productprice'] * $v['quantity'];
            }
            $freight = $total - $total_price;
            //组装keywords完成 继续插入订单信息.............
            $order['product_keyword'] = $product_keyword;
            $order['freight'] = $freight;
            $order['total'] = $total;
            $order['pay_way'] = $data['payment_method']?$data['payment_method']:"unknown";
            $order['website'] = $data['website']?$data['website']:"unknown";
            $order['data_from'] = $value['belong']?$value['belong']:"unknown";
            $order['create_time'] = time();
            $order['update_time'] = time();

            $orderMap = [
                'order_id'=>$order['order_id'],
                // 'customer_id'=>$order['customer_id']
            ];
            //怕存在了~
            if(!db('order')->where($orderMap)->find())
            {
                //入库呀
                $result = db('order')->insert($order);


            }
            else
            {
                echo $key."is exist......\n";
            }
            //完成分类，更新flag;
            $value['classified'] = 1;
            db('order_content')->update($value);
            echo "completed ".sprintf("%.2f",($key+1)/count($order_list)*100)."%......\n";


        }
        return 'ok';
    }



    public function website_list()
    {
        $data = db('website_list')->where(['state'=>1])->select();
        $this->assign('data',$data);
        return $this->fetch();
    }


    public function updateStateWebsite()
    {
        $return_data = ['status'=>0,'msg'=>'更新失败'];
        $website_id = $this->request->param('id');
        $data = db('website_list')->find($website_id);
        if($data['state'] == 1)
        {
            $data['state'] = 0;
        }
        else
        {
            $data['state'] = 1;
        }
        $res = db('website_list')->update($data);
        if($res)
        {
            $return_data = ['status'=>200,'msg'=>'更新成功'];
        }
        return $return_data;
    }



    public function website_add()
    {
        $website_id = $this->request->param('id');
        $data = db('website_list')->find($website_id);
        $this->assign('data',$data);
        return $this->fetch();
    }

    public function saveWebsiteDomain()
    {
        $return_data = ['status'=>0,'msg'=>'更新失败'];
        $website_id = $this->request->param('id');
        $domain = trim($this->request->param('title'));
        if($website_id ==0 || $website_id == "0" )
        {
            $domain = str_replace("https://","",$domain);
            $domain = str_replace("http://","",$domain);
            $res = db('website_list')->insert(['domain'=>$domain,'uid'=>0,'create_time'=>time()]);
            if($res)
            {
                $return_data = ['status'=>200,'msg'=>'添加成功'];
            }

        }
        else
        {
            $res = db('website_list')->update(['id'=>$website_id,'domain'=>$domain,'update_time'=>time()]);
            if($res)
            {
                $return_data = ['status'=>200,'msg'=>'更新成功'];
            }
        }

        return $return_data;
    }














}